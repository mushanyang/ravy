# options

set -g mouse on                               # support mouse
set -g default-terminal "screen-256color"     # make tmux display things in 256 colors
set -g history-limit 50000                    # set scrollback history to 50000
set -g escape-time 0                          # shorten command delay
set -g base-index 1                           # set window index to 1 (0 by default)
set -g renumber-windows on                    # renumber windows when a window is closed
set -g set-titles on                          # terminal title
set -g set-titles-string "#W ❐ #S:#I-#P @ #h" # terminal title string
set -g display-panes-time 600                 # pane indicators display time
set -g focus-events on                        # focus events enabled for terminals that support them
set -g visual-activity off                    # turn off visual activity
set -g display-time 1600                      # status message display time

setw -g aggressive-resize on                  # useful when using "grouped sessions" and multi-monitor setup
setw -g automatic-rename off                  # rename window to reflect current program
setw -g mode-keys vi                          # use vi key bindings in copy and choice mode
setw -g monitor-activity on                   # monitor activity for the window
setw -g monitor-silence 0                     # does not monitor for silence
setw -g pane-base-index 1                     # set pane index to 1
setw -g remain-on-exit off                    # kills the window if the program in it exits
setw -g xterm-keys on

# style

_ts_lg=""
_ts_rg=""
_ts_fg=colour253
_ts_bg=colour238
_ts_csec_bg=colour60
_ts_sec_id_fg=colour113
_ts_info_fg=colour248
_ts_lgr="#[bg=$_ts_bg]#[fg=colour232]$_ts_lg#[fg=$_ts_fg]"
_ts_rgr="#[bg=$_ts_bg]#[fg=colour232]$_ts_rg#[fg=$_ts_fg]"

set -g message-style bg=colour238,fg=colour178      # status message style
set -g status on
set -g status-interval 5                            # status update frequencey (default 15 seconds)
set -g status-justify left                          # left window list for clarity
set -g status-keys emacs                            # emacs key bindings for prompt in status line
set -g status-position bottom
set -g status-style "fg=$_ts_fg,bg=$_ts_bg"
set -g status-left-length 32
set -g status-left "#[fg=$_ts_info_fg] #S $_ts_lgr" # show session name in the left
set -g status-right-length 48
if-shell "[[ \$SSH_CONNECTION ]]" \
  "set -g status-right '$_ts_rgr #[fg=$_ts_info_fg]#h '" \
  "set -g status-right ''"                          # show host name in the right if in a ssh connection

setw -g window-style default
setw -g window-active-style default
setw -g window-status-style default
setw -g window-status-format "#[fg=$_ts_sec_id_fg] #I #[fg=$_ts_fg]#W $_ts_lgr"
setw -g window-status-current-style default
setw -g window-status-current-format "#[bg=$_ts_csec_bg] #I #W $_ts_lgr"
setw -g window-status-activity-style underscore
setw -g window-status-separator ""

setw -g pane-active-border-style fg=colour60        # active pane border color
setw -g pane-border-status off                      # turn off pane border status
setw -g pane-border-style fg=colour235              # pane border style

# key bindings

# use C-Space as tmux prefix
unbind C-b
set -g prefix C-Space

# copy mode
bind Space copy-mode
bind C-Space copy-mode

# scroll up to enter copy mode and scroll down to bottom to exit
bind -n WheelUpPane if -Ft= "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# v and y to select and copy in copy mode
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy C-v rectangle-toggle

# reload ~/.tmux.conf
bind r source-file ~/.tmux.conf\; display "Tmux Config Reloaded."

# save entire scroll back history to a file
bind P command-prompt -p "save scrollback to file:" -I "~/tmux.history" "capture-pane -S -50000 ; save-buffer %1 ; delete-buffer"

# window navigation
bind C-p previous-window
bind C-n next-window
bind c new-window
bind t swap-window -t 1

# \ to split horizontally and - to split vertically at current path
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# swap current pane
bind > swap-pane -D
bind < swap-pane -U

# use h,j,k,l to resize panes
bind h resize-pane -L 5
bind j resize-pane -D 5
bind k resize-pane -U 5
bind l resize-pane -R 5

# determine if focus is in a vim foregrounded pane
_tmux_is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# direct C-Space,w to vim
bind w if-shell "$_tmux_is_vim" "send-keys Space w"

# use M-<h,j,k,l> to navigate with vim
bind -n M-h if-shell "$_tmux_is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$_tmux_is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$_tmux_is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$_tmux_is_vim" "send-keys M-l" "select-pane -R"
bind -n M-p if-shell "$_tmux_is_vim" "send-keys M-p" "select-pane -l"

# kill panes
bind -n M-c if-shell "$_tmux_is_vim" "send-keys M-c" "confirm-before -p 'kill-pane #P? (y/N)' kill-pane"

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 10
