# ----------------------
# Settings
# ----------------------
# remap prefix to Control + Space
unbind C-b
set -g prefix C-Space

# support mouse
set -g mouse off

# make tmux display things in 256 colors
set -g default-terminal "screen-256color"

# set scrollback history to 50000 (10k)
set -g history-limit 50000

# shorten command delay
set -s escape-time 0

# set window and pane index to 1 (0 by default)
set -g base-index 1
setw -g pane-base-index 1

# rename window to reflect current program
setw -g automatic-rename off

# renumber windows when a window is closed
set -g renumber-windows on

# set terminal title
set -g set-titles on
set -g set-titles-string '#W ❐ #S:#I-#P @ #h'

# useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# pane indicators display time
set -g display-panes-time 600

# focus events enabled for terminals that support them
set -g focus-events on

# activity
setw -g monitor-activity on
set -g visual-activity on

# set pane colors - hilight the active pane
set -g pane-border-fg colour235
set -g pane-active-border-fg colour63

# status messages display time & color
set -g display-time 1600
set -g message-bg black
set -g message-fg yellow

# set copy mode keys to vi
setw -g mode-keys vi

# ----------------------
# Stauts bar
# ----------------------
LA=""
RA=""
LL=""
RR=""
TMUX_STATUS_FG=colour253
TMUX_STATUS_BG=colour235
TMUX_STATUS_SEC_BG=colour238
TMUX_STATUS_CSEC_BG=colour61

# turn the status bar on
set -g status on

# set update frequencey (default 15 seconds)
set -g status-interval 5

# left window list for clarity
set -g status-justify left

# emacs key bindings for prompt
set -g status-keys emacs

# position the status bar at top of screen
set -g status-position bottom

set -g status-fg $TMUX_STATUS_FG
set -g status-bg $TMUX_STATUS_BG
set -g status-attr default

setw -g window-status-attr default
setw -g window-status-format "#[fg=$TMUX_STATUS_BG]#[bg=$TMUX_STATUS_SEC_BG]$LA#[fg=$TMUX_STATUS_FG] #I #[fg=$TMUX_STATUS_BG]$LL#[fg=$TMUX_STATUS_FG] #W #[fg=$TMUX_STATUS_SEC_BG]#[bg=$TMUX_STATUS_BG]$LA"

setw -g window-status-current-attr default
setw -g window-status-current-format "#[fg=$TMUX_STATUS_BG]#[bg=$TMUX_STATUS_CSEC_BG]$LA#[fg=$TMUX_STATUS_FG] #I #[fg=$TMUX_STATUS_BG]$LL#[fg=$TMUX_STATUS_FG] #W #[fg=$TMUX_STATUS_CSEC_BG]#[bg=$TMUX_STATUS_BG]$LA"

setw -g window-status-activity-attr underscore
setw -g window-status-separator ""

# show host and session name in the left
set -g status-left-length 40
set -g status-left "#[bg=$TMUX_STATUS_SEC_BG] #h #[fg=$TMUX_STATUS_SEC_BG]#[bg=$TMUX_STATUS_BG]$LA#[fg=$TMUX_STATUS_FG] #S  "

# show time in the right
set -g status-right-length 12
set -g status-right " #[fg=$TMUX_STATUS_SEC_BG]$RA#[fg=$TMUX_STATUS_FG]#[bg=$TMUX_STATUS_SEC_BG] %H:%M "

# ----------------------
# Key bindings
# ----------------------
# reload ~/.tmux.conf
bind r source-file ~/.tmux.conf \; display "Tmux Config Reloaded."

# enter copy mode
bind Space copy-mode
bind C-Space copy-mode

# v and y to select and copy in copy mode
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy C-v rectangle-toggle

# easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

# new window
bind c new-window

# Make the current window the first window
bind t swap-window -t 1

# \ to split horizontally and - to split vertically at current path
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# swap current pane
bind > swap-pane -D
bind < swap-pane -U

# determine if focus is in a vim foregrounded pane
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# use M-<h,j,k,l> to navigate with vim
bind -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind -n M-p if-shell "$is_vim" "send-keys M-p"  "select-pane -l"

# kill panes
bind -n M-c if-shell "$is_vim" "send-keys M-p"  "confirm-before -p 'kill-pane #P? (y/n)' kill-pane"

# use M-<H,J,K,L> to resize panes
bind -n M-H resize-pane -L 5
bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-L resize-pane -R 5

# unbind w (default: choose window)
unbind w
